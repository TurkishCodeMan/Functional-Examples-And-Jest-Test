{"id":"node_modules/ramda/es/match.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\match.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/(0, _curry.default)(function match(rx, str) {\n  return str.match(rx) || [];\n});\nvar _default = match;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":21,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":22,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":24,"column":0}},{"name":"match","generated":{"line":33,"column":4},"source":"node_modules/ramda/es/match.js","original":{"line":24,"column":4}},{"generated":{"line":33,"column":9},"source":"node_modules/ramda/es/match.js","original":{"line":24,"column":9}},{"generated":{"line":33,"column":12},"source":"node_modules/ramda/es/match.js","original":{"line":25,"column":0}},{"generated":{"line":33,"column":25},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":45},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":8}},{"name":"match","generated":{"line":33,"column":54},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":17}},{"generated":{"line":33,"column":59},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":8}},{"name":"rx","generated":{"line":33,"column":60},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":23}},{"generated":{"line":33,"column":62},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":8}},{"name":"str","generated":{"line":33,"column":64},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":27}},{"generated":{"line":33,"column":67},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":8}},{"generated":{"line":33,"column":69},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":32}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":2}},{"name":"str","generated":{"line":34,"column":9},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":9}},{"generated":{"line":34,"column":12},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":12}},{"name":"match","generated":{"line":34,"column":13},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":13}},{"generated":{"line":34,"column":18},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":9}},{"name":"rx","generated":{"line":34,"column":19},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":19}},{"generated":{"line":34,"column":21},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":9}},{"generated":{"line":34,"column":26},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":26}},{"generated":{"line":34,"column":28},"source":"node_modules/ramda/es/match.js","original":{"line":27,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/match.js","original":{"line":28,"column":1}},{"generated":{"line":35,"column":1},"source":"node_modules/ramda/es/match.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":2},"source":"node_modules/ramda/es/match.js","original":{"line":24,"column":0}},{"name":"match","generated":{"line":36,"column":15},"source":"node_modules/ramda/es/match.js","original":{"line":30,"column":15}}],"sources":{"node_modules/ramda/es/match.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;"},"lineCount":null}},"error":null,"hash":"d19d95ad0fe72669cb5fa65da7c6aff2","cacheData":{"env":{}}}
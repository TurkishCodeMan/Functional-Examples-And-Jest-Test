{"id":"node_modules/ramda/es/converge.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_map.js","loc":{"line":2,"column":17},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_map.js"},{"name":"./curryN.js","loc":{"line":3,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curryN.js"},{"name":"./max.js","loc":{"line":4,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\max.js"},{"name":"./pluck.js","loc":{"line":5,"column":18},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\pluck.js"},{"name":"./reduce.js","loc":{"line":6,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\reduce.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _map2 = _interopRequireDefault(require(\"./internal/_map.js\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN.js\"));\n\nvar _max = _interopRequireDefault(require(\"./max.js\"));\n\nvar _pluck = _interopRequireDefault(require(\"./pluck.js\"));\n\nvar _reduce = _interopRequireDefault(require(\"./reduce.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/(0, _curry.default)(function converge(after, fns) {\n  return (0, _curryN.default)((0, _reduce.default)(_max.default, 0, (0, _pluck.default)('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, (0, _map2.default)(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nvar _default = converge;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":6,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":7,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":8,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":9,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":10,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":11,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":12,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":13,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":14,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":15,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":16,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":17,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":18,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":19,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":20,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":21,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":22,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":23,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":24,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":25,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":26,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":27,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":28,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":29,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":30,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":31,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":32,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":33,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":34,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":36,"column":0}},{"name":"converge","generated":{"line":50,"column":4},"source":"node_modules/ramda/es/converge.js","original":{"line":36,"column":4}},{"generated":{"line":50,"column":12},"source":"node_modules/ramda/es/converge.js","original":{"line":36,"column":12}},{"generated":{"line":50,"column":15},"source":"node_modules/ramda/es/converge.js","original":{"line":37,"column":0}},{"generated":{"line":50,"column":28},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":0}},{"generated":{"line":50,"column":48},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":8}},{"name":"converge","generated":{"line":50,"column":57},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":17}},{"generated":{"line":50,"column":65},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":8}},{"name":"after","generated":{"line":50,"column":66},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":26}},{"generated":{"line":50,"column":71},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":8}},{"name":"fns","generated":{"line":50,"column":73},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":33}},{"generated":{"line":50,"column":76},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":8}},{"generated":{"line":50,"column":78},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":38}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":2}},{"generated":{"line":51,"column":9},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":9}},{"generated":{"line":51,"column":30},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":16}},{"name":"max","generated":{"line":51,"column":51},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":23}},{"generated":{"line":51,"column":63},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":16}},{"generated":{"line":51,"column":65},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":28}},{"generated":{"line":51,"column":66},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":16}},{"generated":{"line":51,"column":68},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":31}},{"generated":{"line":51,"column":88},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":37}},{"generated":{"line":51,"column":96},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":31}},{"name":"fns","generated":{"line":51,"column":98},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":47}},{"generated":{"line":51,"column":101},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":31}},{"generated":{"line":51,"column":102},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":16}},{"generated":{"line":51,"column":103},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":9}},{"generated":{"line":51,"column":105},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":54}},{"generated":{"line":51,"column":117},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":66}},{"generated":{"line":52,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":40,"column":4}},{"name":"args","generated":{"line":52,"column":8},"source":"node_modules/ramda/es/converge.js","original":{"line":40,"column":8}},{"generated":{"line":52,"column":12},"source":"node_modules/ramda/es/converge.js","original":{"line":40,"column":12}},{"name":"arguments","generated":{"line":52,"column":15},"source":"node_modules/ramda/es/converge.js","original":{"line":40,"column":15}},{"generated":{"line":52,"column":24},"source":"node_modules/ramda/es/converge.js","original":{"line":40,"column":4}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":41,"column":4}},{"name":"context","generated":{"line":53,"column":8},"source":"node_modules/ramda/es/converge.js","original":{"line":41,"column":8}},{"generated":{"line":53,"column":15},"source":"node_modules/ramda/es/converge.js","original":{"line":41,"column":15}},{"generated":{"line":53,"column":18},"source":"node_modules/ramda/es/converge.js","original":{"line":41,"column":18}},{"generated":{"line":53,"column":22},"source":"node_modules/ramda/es/converge.js","original":{"line":41,"column":4}},{"generated":{"line":54,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":4}},{"name":"after","generated":{"line":54,"column":11},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":11}},{"generated":{"line":54,"column":16},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":16}},{"name":"apply","generated":{"line":54,"column":17},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":17}},{"generated":{"line":54,"column":22},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":11}},{"name":"context","generated":{"line":54,"column":23},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":23}},{"generated":{"line":54,"column":30},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":11}},{"generated":{"line":54,"column":32},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":32}},{"generated":{"line":54,"column":51},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":37}},{"name":"fn","generated":{"line":54,"column":61},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":47}},{"generated":{"line":54,"column":63},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":37}},{"generated":{"line":54,"column":65},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":51}},{"generated":{"line":55,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":6}},{"name":"fn","generated":{"line":55,"column":13},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":13}},{"generated":{"line":55,"column":15},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":15}},{"name":"apply","generated":{"line":55,"column":16},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":16}},{"generated":{"line":55,"column":21},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":13}},{"name":"context","generated":{"line":55,"column":22},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":22}},{"generated":{"line":55,"column":29},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":13}},{"name":"args","generated":{"line":55,"column":31},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":31}},{"generated":{"line":55,"column":35},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":13}},{"generated":{"line":55,"column":36},"source":"node_modules/ramda/es/converge.js","original":{"line":43,"column":6}},{"generated":{"line":56,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":44,"column":5}},{"generated":{"line":56,"column":5},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":32}},{"name":"fns","generated":{"line":56,"column":7},"source":"node_modules/ramda/es/converge.js","original":{"line":44,"column":7}},{"generated":{"line":56,"column":10},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":32}},{"generated":{"line":56,"column":11},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":11}},{"generated":{"line":56,"column":12},"source":"node_modules/ramda/es/converge.js","original":{"line":42,"column":4}},{"generated":{"line":57,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":45,"column":3}},{"generated":{"line":57,"column":3},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":9}},{"generated":{"line":57,"column":4},"source":"node_modules/ramda/es/converge.js","original":{"line":39,"column":2}},{"generated":{"line":58,"column":0},"source":"node_modules/ramda/es/converge.js","original":{"line":46,"column":1}},{"generated":{"line":58,"column":1},"source":"node_modules/ramda/es/converge.js","original":{"line":38,"column":0}},{"generated":{"line":58,"column":2},"source":"node_modules/ramda/es/converge.js","original":{"line":36,"column":0}},{"name":"converge","generated":{"line":59,"column":15},"source":"node_modules/ramda/es/converge.js","original":{"line":48,"column":15}}],"sources":{"node_modules/ramda/es/converge.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;"},"lineCount":null}},"error":null,"hash":"3baaf34b7c3603e4002d1611d85529e2","cacheData":{"env":{}}}
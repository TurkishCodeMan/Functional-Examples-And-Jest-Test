{"id":"node_modules/ramda/es/splitAt.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./length.js","loc":{"line":2,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\length.js"},{"name":"./slice.js","loc":{"line":3,"column":18},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\slice.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _length = _interopRequireDefault(require(\"./length.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/(0, _curry.default)(function splitAt(index, array) {\n  return [(0, _slice.default)(0, index, array), (0, _slice.default)(index, (0, _length.default)(array), array)];\n});\nvar _default = splitAt;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":23,"column":0}},{"name":"splitAt","generated":{"line":34,"column":4},"source":"node_modules/ramda/es/splitAt.js","original":{"line":23,"column":4}},{"generated":{"line":34,"column":11},"source":"node_modules/ramda/es/splitAt.js","original":{"line":23,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/splitAt.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":27},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":47},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":8}},{"name":"splitAt","generated":{"line":34,"column":56},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":17}},{"generated":{"line":34,"column":63},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":8}},{"name":"index","generated":{"line":34,"column":64},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":25}},{"generated":{"line":34,"column":69},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":8}},{"name":"array","generated":{"line":34,"column":71},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":32}},{"generated":{"line":34,"column":76},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":8}},{"generated":{"line":34,"column":78},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":39}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":2}},{"generated":{"line":35,"column":9},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":9}},{"generated":{"line":35,"column":10},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":10}},{"generated":{"line":35,"column":30},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":16}},{"generated":{"line":35,"column":31},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":10}},{"name":"index","generated":{"line":35,"column":33},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":19}},{"generated":{"line":35,"column":38},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":10}},{"name":"array","generated":{"line":35,"column":40},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":26}},{"generated":{"line":35,"column":45},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":10}},{"generated":{"line":35,"column":46},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":9}},{"generated":{"line":35,"column":48},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":34}},{"name":"index","generated":{"line":35,"column":68},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":40}},{"generated":{"line":35,"column":73},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":34}},{"generated":{"line":35,"column":75},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":47}},{"name":"array","generated":{"line":35,"column":96},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":54}},{"generated":{"line":35,"column":101},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":47}},{"generated":{"line":35,"column":102},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":34}},{"name":"array","generated":{"line":35,"column":104},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":62}},{"generated":{"line":35,"column":109},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":34}},{"generated":{"line":35,"column":110},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":9}},{"generated":{"line":35,"column":111},"source":"node_modules/ramda/es/splitAt.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/splitAt.js","original":{"line":27,"column":1}},{"generated":{"line":36,"column":1},"source":"node_modules/ramda/es/splitAt.js","original":{"line":25,"column":0}},{"generated":{"line":36,"column":2},"source":"node_modules/ramda/es/splitAt.js","original":{"line":23,"column":0}},{"name":"splitAt","generated":{"line":37,"column":15},"source":"node_modules/ramda/es/splitAt.js","original":{"line":29,"column":15}}],"sources":{"node_modules/ramda/es/splitAt.js":"import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;"},"lineCount":null}},"error":null,"hash":"77d6c62d464d6966a91f4c09da0258a2","cacheData":{"env":{}}}
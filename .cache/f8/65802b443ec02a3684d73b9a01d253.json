{"id":"node_modules/ramda/es/none.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_complement.js","loc":{"line":1,"column":24},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\none.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_complement.js"},{"name":"./internal/_curry2.js","loc":{"line":2,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\none.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./all.js","loc":{"line":3,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\none.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\all.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _complement2 = _interopRequireDefault(require(\"./internal/_complement.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _all = _interopRequireDefault(require(\"./all.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/(0, _curry.default)(function none(fn, input) {\n  return (0, _all.default)((0, _complement2.default)(fn), input);\n});\nvar _default = none;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":28,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":30,"column":0}},{"name":"none","generated":{"line":41,"column":4},"source":"node_modules/ramda/es/none.js","original":{"line":30,"column":4}},{"generated":{"line":41,"column":8},"source":"node_modules/ramda/es/none.js","original":{"line":30,"column":8}},{"generated":{"line":41,"column":11},"source":"node_modules/ramda/es/none.js","original":{"line":31,"column":0}},{"generated":{"line":41,"column":24},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":44},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":8}},{"name":"none","generated":{"line":41,"column":53},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":17}},{"generated":{"line":41,"column":57},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":8}},{"name":"fn","generated":{"line":41,"column":58},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":22}},{"generated":{"line":41,"column":60},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":8}},{"name":"input","generated":{"line":41,"column":62},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":26}},{"generated":{"line":41,"column":67},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":8}},{"generated":{"line":41,"column":69},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":33}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":9}},{"generated":{"line":42,"column":27},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":13}},{"name":"fn","generated":{"line":42,"column":53},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":25}},{"generated":{"line":42,"column":55},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":13}},{"generated":{"line":42,"column":56},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":9}},{"name":"input","generated":{"line":42,"column":58},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":30}},{"generated":{"line":42,"column":63},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":9}},{"generated":{"line":42,"column":64},"source":"node_modules/ramda/es/none.js","original":{"line":33,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/none.js","original":{"line":34,"column":1}},{"generated":{"line":43,"column":1},"source":"node_modules/ramda/es/none.js","original":{"line":32,"column":0}},{"generated":{"line":43,"column":2},"source":"node_modules/ramda/es/none.js","original":{"line":30,"column":0}},{"name":"none","generated":{"line":44,"column":15},"source":"node_modules/ramda/es/none.js","original":{"line":36,"column":15}}],"sources":{"node_modules/ramda/es/none.js":"import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;"},"lineCount":null}},"error":null,"hash":"84e9c12ead17215aad8f5f00aecd396f","cacheData":{"env":{}}}
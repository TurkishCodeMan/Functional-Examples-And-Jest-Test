{"id":"node_modules/ramda/es/propSatisfies.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\propSatisfies.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/(0, _curry.default)(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nvar _default = propSatisfies;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":22,"column":0}},{"name":"propSatisfies","generated":{"line":31,"column":4},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":22,"column":4}},{"generated":{"line":31,"column":17},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":22,"column":17}},{"generated":{"line":31,"column":20},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":33},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":53},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":8}},{"name":"propSatisfies","generated":{"line":31,"column":62},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":17}},{"generated":{"line":31,"column":75},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":8}},{"name":"pred","generated":{"line":31,"column":76},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":31}},{"generated":{"line":31,"column":80},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":8}},{"name":"name","generated":{"line":31,"column":82},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":37}},{"generated":{"line":31,"column":86},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":8}},{"name":"obj","generated":{"line":31,"column":88},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":43}},{"generated":{"line":31,"column":91},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":8}},{"generated":{"line":31,"column":93},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":48}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":2}},{"name":"pred","generated":{"line":32,"column":9},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":9}},{"generated":{"line":32,"column":13},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":13}},{"name":"obj","generated":{"line":32,"column":14},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":14}},{"generated":{"line":32,"column":17},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":17}},{"name":"name","generated":{"line":32,"column":18},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":18}},{"generated":{"line":32,"column":22},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":17}},{"generated":{"line":32,"column":23},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":13}},{"generated":{"line":32,"column":24},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":26,"column":1}},{"generated":{"line":33,"column":1},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":22,"column":0}},{"name":"propSatisfies","generated":{"line":34,"column":15},"source":"node_modules/ramda/es/propSatisfies.js","original":{"line":28,"column":15}}],"sources":{"node_modules/ramda/es/propSatisfies.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\nexport default propSatisfies;"},"lineCount":null}},"error":null,"hash":"7422cca86a099095316bb4bfe637a466","cacheData":{"env":{}}}
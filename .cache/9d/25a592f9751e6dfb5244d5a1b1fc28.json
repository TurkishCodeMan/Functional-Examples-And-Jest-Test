{"id":"node_modules/ramda/es/mathMod.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mathMod.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_isInteger.js","loc":{"line":2,"column":23},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mathMod.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_isInteger.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _isInteger2 = _interopRequireDefault(require(\"./internal/_isInteger.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/(0, _curry.default)(function mathMod(m, p) {\n  if (!(0, _isInteger2.default)(m)) {\n    return NaN;\n  }\n\n  if (!(0, _isInteger2.default)(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\nvar _default = mathMod;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":31,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":32,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":33,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":34,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":35,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":37,"column":0}},{"name":"mathMod","generated":{"line":47,"column":4},"source":"node_modules/ramda/es/mathMod.js","original":{"line":37,"column":4}},{"generated":{"line":47,"column":11},"source":"node_modules/ramda/es/mathMod.js","original":{"line":37,"column":11}},{"generated":{"line":47,"column":14},"source":"node_modules/ramda/es/mathMod.js","original":{"line":38,"column":0}},{"generated":{"line":47,"column":27},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":0}},{"generated":{"line":47,"column":47},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":8}},{"name":"mathMod","generated":{"line":47,"column":56},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":17}},{"generated":{"line":47,"column":63},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":8}},{"name":"m","generated":{"line":47,"column":64},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":25}},{"generated":{"line":47,"column":65},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":8}},{"name":"p","generated":{"line":47,"column":67},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":28}},{"generated":{"line":47,"column":68},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":8}},{"generated":{"line":47,"column":70},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":31}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":2}},{"generated":{"line":48,"column":6},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":6}},{"generated":{"line":48,"column":7},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":7}},{"name":"m","generated":{"line":48,"column":32},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":18}},{"generated":{"line":48,"column":33},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":7}},{"generated":{"line":48,"column":34},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":2}},{"generated":{"line":48,"column":36},"source":"node_modules/ramda/es/mathMod.js","original":{"line":40,"column":22}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":41,"column":4}},{"name":"NaN","generated":{"line":49,"column":11},"source":"node_modules/ramda/es/mathMod.js","original":{"line":41,"column":11}},{"generated":{"line":49,"column":14},"source":"node_modules/ramda/es/mathMod.js","original":{"line":41,"column":4}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":42,"column":3}},{"generated":{"line":52,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":2}},{"generated":{"line":52,"column":6},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":6}},{"generated":{"line":52,"column":7},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":7}},{"name":"p","generated":{"line":52,"column":32},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":18}},{"generated":{"line":52,"column":33},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":7}},{"generated":{"line":52,"column":34},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":6}},{"name":"p","generated":{"line":52,"column":38},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":24}},{"generated":{"line":52,"column":39},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":25}},{"generated":{"line":52,"column":42},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":28}},{"generated":{"line":52,"column":43},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":2}},{"generated":{"line":52,"column":45},"source":"node_modules/ramda/es/mathMod.js","original":{"line":44,"column":31}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":45,"column":4}},{"name":"NaN","generated":{"line":53,"column":11},"source":"node_modules/ramda/es/mathMod.js","original":{"line":45,"column":11}},{"generated":{"line":53,"column":14},"source":"node_modules/ramda/es/mathMod.js","original":{"line":45,"column":4}},{"generated":{"line":54,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":46,"column":3}},{"generated":{"line":56,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":2}},{"generated":{"line":56,"column":9},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":9}},{"name":"m","generated":{"line":56,"column":10},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":10}},{"generated":{"line":56,"column":11},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":11}},{"name":"p","generated":{"line":56,"column":14},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":14}},{"generated":{"line":56,"column":15},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":10}},{"name":"p","generated":{"line":56,"column":18},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":18}},{"generated":{"line":56,"column":19},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":9}},{"name":"p","generated":{"line":56,"column":23},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":23}},{"generated":{"line":56,"column":24},"source":"node_modules/ramda/es/mathMod.js","original":{"line":48,"column":2}},{"generated":{"line":57,"column":0},"source":"node_modules/ramda/es/mathMod.js","original":{"line":49,"column":1}},{"generated":{"line":57,"column":1},"source":"node_modules/ramda/es/mathMod.js","original":{"line":39,"column":0}},{"generated":{"line":57,"column":2},"source":"node_modules/ramda/es/mathMod.js","original":{"line":37,"column":0}},{"name":"mathMod","generated":{"line":58,"column":15},"source":"node_modules/ramda/es/mathMod.js","original":{"line":51,"column":15}}],"sources":{"node_modules/ramda/es/mathMod.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;"},"lineCount":null}},"error":null,"hash":"9db9022f6f0a19c2520e3695fac231ab","cacheData":{"env":{}}}
{"id":"node_modules/ramda/es/call.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./curry.js","loc":{"line":1,"column":18},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\call.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curry.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./curry.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/(0, _curry.default)(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nvar _default = call;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":21,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":22,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":23,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":24,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":25,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":26,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":27,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":28,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":29,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":30,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":31,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":32,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":33,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":35,"column":0}},{"name":"call","generated":{"line":44,"column":4},"source":"node_modules/ramda/es/call.js","original":{"line":35,"column":4}},{"generated":{"line":44,"column":8},"source":"node_modules/ramda/es/call.js","original":{"line":35,"column":8}},{"generated":{"line":44,"column":11},"source":"node_modules/ramda/es/call.js","original":{"line":36,"column":0}},{"generated":{"line":44,"column":24},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":44},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":6}},{"name":"call","generated":{"line":44,"column":53},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":15}},{"generated":{"line":44,"column":57},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":6}},{"name":"fn","generated":{"line":44,"column":58},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":20}},{"generated":{"line":44,"column":60},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":6}},{"generated":{"line":44,"column":62},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":24}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":2}},{"name":"fn","generated":{"line":45,"column":9},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":9}},{"generated":{"line":45,"column":11},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":11}},{"name":"apply","generated":{"line":45,"column":12},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":12}},{"generated":{"line":45,"column":17},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":9}},{"generated":{"line":45,"column":18},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":18}},{"generated":{"line":45,"column":22},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":9}},{"name":"Array","generated":{"line":45,"column":24},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"generated":{"line":45,"column":29},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":29}},{"name":"prototype","generated":{"line":45,"column":30},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":30}},{"generated":{"line":45,"column":39},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"name":"slice","generated":{"line":45,"column":40},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":40}},{"generated":{"line":45,"column":45},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"name":"call","generated":{"line":45,"column":46},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":46}},{"generated":{"line":45,"column":50},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"name":"arguments","generated":{"line":45,"column":51},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":51}},{"generated":{"line":45,"column":60},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"generated":{"line":45,"column":62},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":62}},{"generated":{"line":45,"column":63},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":24}},{"generated":{"line":45,"column":64},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":9}},{"generated":{"line":45,"column":65},"source":"node_modules/ramda/es/call.js","original":{"line":38,"column":2}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/call.js","original":{"line":39,"column":1}},{"generated":{"line":46,"column":1},"source":"node_modules/ramda/es/call.js","original":{"line":37,"column":0}},{"generated":{"line":46,"column":2},"source":"node_modules/ramda/es/call.js","original":{"line":35,"column":0}},{"name":"call","generated":{"line":47,"column":15},"source":"node_modules/ramda/es/call.js","original":{"line":40,"column":15}}],"sources":{"node_modules/ramda/es/call.js":"import curry from \"./curry.js\";\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;"},"lineCount":null}},"error":null,"hash":"abcdf9d4896088b32ac631231386fd8d","cacheData":{"env":{}}}
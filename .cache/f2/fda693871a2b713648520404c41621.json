{"id":"node_modules/ramda/es/eqProps.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\eqProps.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./equals.js","loc":{"line":2,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\eqProps.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\equals.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _equals = _interopRequireDefault(require(\"./equals.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/(0, _curry.default)(function eqProps(prop, obj1, obj2) {\n  return (0, _equals.default)(obj1[prop], obj2[prop]);\n});\nvar _default = eqProps;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":25,"column":0}},{"name":"eqProps","generated":{"line":35,"column":4},"source":"node_modules/ramda/es/eqProps.js","original":{"line":25,"column":4}},{"generated":{"line":35,"column":11},"source":"node_modules/ramda/es/eqProps.js","original":{"line":25,"column":11}},{"generated":{"line":35,"column":14},"source":"node_modules/ramda/es/eqProps.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":27},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":0}},{"generated":{"line":35,"column":47},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":8}},{"name":"eqProps","generated":{"line":35,"column":56},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":17}},{"generated":{"line":35,"column":63},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":8}},{"name":"prop","generated":{"line":35,"column":64},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":25}},{"generated":{"line":35,"column":68},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":8}},{"name":"obj1","generated":{"line":35,"column":70},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":31}},{"generated":{"line":35,"column":74},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":8}},{"name":"obj2","generated":{"line":35,"column":76},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":37}},{"generated":{"line":35,"column":80},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":8}},{"generated":{"line":35,"column":82},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":43}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":2}},{"generated":{"line":36,"column":9},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":9}},{"name":"obj1","generated":{"line":36,"column":30},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":16}},{"generated":{"line":36,"column":34},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":20}},{"name":"prop","generated":{"line":36,"column":35},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":21}},{"generated":{"line":36,"column":39},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":20}},{"generated":{"line":36,"column":40},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":9}},{"name":"obj2","generated":{"line":36,"column":42},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":28}},{"generated":{"line":36,"column":46},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":32}},{"name":"prop","generated":{"line":36,"column":47},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":33}},{"generated":{"line":36,"column":51},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":32}},{"generated":{"line":36,"column":52},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":9}},{"generated":{"line":36,"column":53},"source":"node_modules/ramda/es/eqProps.js","original":{"line":28,"column":2}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/eqProps.js","original":{"line":29,"column":1}},{"generated":{"line":37,"column":1},"source":"node_modules/ramda/es/eqProps.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":2},"source":"node_modules/ramda/es/eqProps.js","original":{"line":25,"column":0}},{"name":"eqProps","generated":{"line":38,"column":15},"source":"node_modules/ramda/es/eqProps.js","original":{"line":31,"column":15}}],"sources":{"node_modules/ramda/es/eqProps.js":"import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;"},"lineCount":null}},"error":null,"hash":"e67343dc3612dc42ca741ddc336c8628","cacheData":{"env":{}}}
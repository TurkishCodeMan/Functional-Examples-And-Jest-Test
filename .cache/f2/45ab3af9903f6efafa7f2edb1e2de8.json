{"id":"node_modules/ramda/es/both.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\both.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_isFunction.js","loc":{"line":2,"column":24},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\both.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_isFunction.js"},{"name":"./and.js","loc":{"line":3,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\both.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\and.js"},{"name":"./lift.js","loc":{"line":4,"column":17},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\both.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\lift.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"./internal/_isFunction.js\"));\n\nvar _and = _interopRequireDefault(require(\"./and.js\"));\n\nvar _lift = _interopRequireDefault(require(\"./lift.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/(0, _curry.default)(function both(f, g) {\n  return (0, _isFunction2.default)(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : (0, _lift.default)(_and.default)(f, g);\n});\nvar _default = both;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":7,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":8,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":9,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":10,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":12,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":13,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":14,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":15,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":16,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":17,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":18,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":19,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":21,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":23,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":24,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":25,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":26,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":27,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":28,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":29,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":30,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":31,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":32,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":33,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":34,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":35,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":37,"column":0}},{"name":"both","generated":{"line":49,"column":4},"source":"node_modules/ramda/es/both.js","original":{"line":37,"column":4}},{"generated":{"line":49,"column":8},"source":"node_modules/ramda/es/both.js","original":{"line":37,"column":8}},{"generated":{"line":49,"column":11},"source":"node_modules/ramda/es/both.js","original":{"line":38,"column":0}},{"generated":{"line":49,"column":24},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":0}},{"generated":{"line":49,"column":44},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":8}},{"name":"both","generated":{"line":49,"column":53},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":17}},{"generated":{"line":49,"column":57},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":8}},{"name":"f","generated":{"line":49,"column":58},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":22}},{"generated":{"line":49,"column":59},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":8}},{"name":"g","generated":{"line":49,"column":61},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":25}},{"generated":{"line":49,"column":62},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":8}},{"generated":{"line":49,"column":64},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":28}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":2}},{"generated":{"line":50,"column":9},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":9}},{"name":"f","generated":{"line":50,"column":35},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":21}},{"generated":{"line":50,"column":36},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":9}},{"generated":{"line":50,"column":40},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":26}},{"name":"_both","generated":{"line":50,"column":49},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":35}},{"generated":{"line":50,"column":54},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":26}},{"generated":{"line":50,"column":57},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":43}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":4}},{"name":"f","generated":{"line":51,"column":11},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":11}},{"generated":{"line":51,"column":12},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":12}},{"name":"apply","generated":{"line":51,"column":13},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":13}},{"generated":{"line":51,"column":18},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":11}},{"generated":{"line":51,"column":19},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":19}},{"generated":{"line":51,"column":23},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":11}},{"name":"arguments","generated":{"line":51,"column":25},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":25}},{"generated":{"line":51,"column":34},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":11}},{"name":"g","generated":{"line":51,"column":39},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":39}},{"generated":{"line":51,"column":40},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":40}},{"name":"apply","generated":{"line":51,"column":41},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":41}},{"generated":{"line":51,"column":46},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":39}},{"generated":{"line":51,"column":47},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":47}},{"generated":{"line":51,"column":51},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":39}},{"name":"arguments","generated":{"line":51,"column":53},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":53}},{"generated":{"line":51,"column":62},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":39}},{"generated":{"line":51,"column":63},"source":"node_modules/ramda/es/both.js","original":{"line":41,"column":4}},{"generated":{"line":52,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":3}},{"generated":{"line":52,"column":3},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":9}},{"generated":{"line":52,"column":6},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":6}},{"name":"and","generated":{"line":52,"column":25},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":11}},{"generated":{"line":52,"column":37},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":6}},{"name":"f","generated":{"line":52,"column":39},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":16}},{"generated":{"line":52,"column":40},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":6}},{"name":"g","generated":{"line":52,"column":42},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":19}},{"generated":{"line":52,"column":43},"source":"node_modules/ramda/es/both.js","original":{"line":42,"column":6}},{"generated":{"line":52,"column":44},"source":"node_modules/ramda/es/both.js","original":{"line":40,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/both.js","original":{"line":43,"column":1}},{"generated":{"line":53,"column":1},"source":"node_modules/ramda/es/both.js","original":{"line":39,"column":0}},{"generated":{"line":53,"column":2},"source":"node_modules/ramda/es/both.js","original":{"line":37,"column":0}},{"name":"both","generated":{"line":54,"column":15},"source":"node_modules/ramda/es/both.js","original":{"line":45,"column":15}}],"sources":{"node_modules/ramda/es/both.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;"},"lineCount":null}},"error":null,"hash":"b63b8ea821ab7dee5357381c911e6b60","cacheData":{"env":{}}}
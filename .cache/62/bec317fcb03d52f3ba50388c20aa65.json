{"id":"node_modules/ramda/es/mergeDeepWithKey.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWithKey.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./internal/_isObject.js","loc":{"line":2,"column":22},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWithKey.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_isObject.js"},{"name":"./mergeWithKey.js","loc":{"line":3,"column":25},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWithKey.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeWithKey.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _isObject2 = _interopRequireDefault(require(\"./internal/_isObject.js\"));\n\nvar _mergeWithKey = _interopRequireDefault(require(\"./mergeWithKey.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/(0, _curry.default)(function mergeDeepWithKey(fn, lObj, rObj) {\n  return (0, _mergeWithKey.default)(function (k, lVal, rVal) {\n    if ((0, _isObject2.default)(lVal) && (0, _isObject2.default)(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nvar _default = mergeDeepWithKey;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":28,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":30,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":31,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":33,"column":0}},{"name":"mergeDeepWithKey","generated":{"line":44,"column":4},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":33,"column":4}},{"generated":{"line":44,"column":20},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":33,"column":20}},{"generated":{"line":44,"column":23},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":34,"column":0}},{"generated":{"line":44,"column":36},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":0}},{"generated":{"line":44,"column":56},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":8}},{"name":"mergeDeepWithKey","generated":{"line":44,"column":65},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":17}},{"generated":{"line":44,"column":81},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":8}},{"name":"fn","generated":{"line":44,"column":82},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":34}},{"generated":{"line":44,"column":84},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":8}},{"name":"lObj","generated":{"line":44,"column":86},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":38}},{"generated":{"line":44,"column":90},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":8}},{"name":"rObj","generated":{"line":44,"column":92},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":44}},{"generated":{"line":44,"column":96},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":8}},{"generated":{"line":44,"column":98},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":50}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":2}},{"generated":{"line":45,"column":9},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":9}},{"generated":{"line":45,"column":36},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":22}},{"name":"k","generated":{"line":45,"column":46},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":32}},{"generated":{"line":45,"column":47},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":22}},{"name":"lVal","generated":{"line":45,"column":49},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":35}},{"generated":{"line":45,"column":53},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":22}},{"name":"rVal","generated":{"line":45,"column":55},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":41}},{"generated":{"line":45,"column":59},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":22}},{"generated":{"line":45,"column":61},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":47}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":4}},{"generated":{"line":46,"column":8},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":8}},{"name":"lVal","generated":{"line":46,"column":32},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":18}},{"generated":{"line":46,"column":36},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":8}},{"generated":{"line":46,"column":41},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":27}},{"name":"rVal","generated":{"line":46,"column":65},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":37}},{"generated":{"line":46,"column":69},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":27}},{"generated":{"line":46,"column":70},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":4}},{"generated":{"line":46,"column":72},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":44}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":6}},{"name":"mergeDeepWithKey","generated":{"line":47,"column":13},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":13}},{"generated":{"line":47,"column":29},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":29}},{"name":"fn","generated":{"line":47,"column":30},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":30}},{"generated":{"line":47,"column":32},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":29}},{"name":"lVal","generated":{"line":47,"column":34},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":34}},{"generated":{"line":47,"column":38},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":29}},{"name":"rVal","generated":{"line":47,"column":40},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":40}},{"generated":{"line":47,"column":44},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":29}},{"generated":{"line":47,"column":45},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":38,"column":6}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":39,"column":5}},{"generated":{"line":48,"column":5},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":37,"column":4}},{"generated":{"line":48,"column":11},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":39,"column":11}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":6}},{"name":"fn","generated":{"line":49,"column":13},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":13}},{"generated":{"line":49,"column":15},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":15}},{"name":"k","generated":{"line":49,"column":16},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":16}},{"generated":{"line":49,"column":17},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":15}},{"name":"lVal","generated":{"line":49,"column":19},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":19}},{"generated":{"line":49,"column":23},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":15}},{"name":"rVal","generated":{"line":49,"column":25},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":25}},{"generated":{"line":49,"column":29},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":15}},{"generated":{"line":49,"column":30},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":40,"column":6}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":41,"column":5}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":42,"column":3}},{"generated":{"line":51,"column":3},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":9}},{"name":"lObj","generated":{"line":51,"column":5},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":42,"column":5}},{"generated":{"line":51,"column":9},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":9}},{"name":"rObj","generated":{"line":51,"column":11},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":42,"column":11}},{"generated":{"line":51,"column":15},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":9}},{"generated":{"line":51,"column":16},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":36,"column":2}},{"generated":{"line":52,"column":0},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":43,"column":1}},{"generated":{"line":52,"column":1},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":35,"column":0}},{"generated":{"line":52,"column":2},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":33,"column":0}},{"name":"mergeDeepWithKey","generated":{"line":53,"column":15},"source":"node_modules/ramda/es/mergeDeepWithKey.js","original":{"line":45,"column":15}}],"sources":{"node_modules/ramda/es/mergeDeepWithKey.js":"import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;"},"lineCount":null}},"error":null,"hash":"99506c2891af2800d1414c3530b15d1b","cacheData":{"env":{}}}
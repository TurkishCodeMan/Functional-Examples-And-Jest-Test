{"id":"node_modules/ramda/es/fromPairs.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\fromPairs.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry1.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/(0, _curry.default)(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\nvar _default = fromPairs;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":19,"column":0}},{"name":"fromPairs","generated":{"line":28,"column":4},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":19,"column":4}},{"generated":{"line":28,"column":13},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":19,"column":13}},{"generated":{"line":28,"column":16},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":20,"column":0}},{"generated":{"line":28,"column":29},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":49},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":8}},{"name":"fromPairs","generated":{"line":28,"column":58},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":17}},{"generated":{"line":28,"column":67},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":8}},{"name":"pairs","generated":{"line":28,"column":68},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":27}},{"generated":{"line":28,"column":73},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":8}},{"generated":{"line":28,"column":75},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":34}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":22,"column":2}},{"name":"result","generated":{"line":29,"column":6},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":22,"column":6}},{"generated":{"line":29,"column":12},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":22,"column":12}},{"generated":{"line":29,"column":15},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":22,"column":15}},{"generated":{"line":29,"column":17},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":22,"column":2}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":23,"column":2}},{"name":"idx","generated":{"line":30,"column":6},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":23,"column":6}},{"generated":{"line":30,"column":9},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":23,"column":9}},{"generated":{"line":30,"column":12},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":23,"column":12}},{"generated":{"line":30,"column":13},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":23,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":2}},{"name":"idx","generated":{"line":32,"column":9},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":9}},{"generated":{"line":32,"column":12},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":12}},{"name":"pairs","generated":{"line":32,"column":15},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":15}},{"generated":{"line":32,"column":20},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":20}},{"name":"length","generated":{"line":32,"column":21},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":21}},{"generated":{"line":32,"column":27},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":2}},{"generated":{"line":32,"column":29},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":25,"column":29}},{"name":"result","generated":{"line":33,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":4}},{"name":"result","generated":{"line":33,"column":4},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":4}},{"generated":{"line":33,"column":10},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":10}},{"name":"pairs","generated":{"line":33,"column":11},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":11}},{"generated":{"line":33,"column":16},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":16}},{"name":"idx","generated":{"line":33,"column":17},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":17}},{"generated":{"line":33,"column":20},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":16}},{"generated":{"line":33,"column":21},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":11}},{"generated":{"line":33,"column":22},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":22}},{"generated":{"line":33,"column":23},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":11}},{"generated":{"line":33,"column":24},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":10}},{"generated":{"line":33,"column":25},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":4}},{"name":"pairs","generated":{"line":33,"column":28},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":28}},{"generated":{"line":33,"column":33},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":33}},{"name":"idx","generated":{"line":33,"column":34},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":34}},{"generated":{"line":33,"column":37},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":33}},{"generated":{"line":33,"column":38},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":28}},{"generated":{"line":33,"column":39},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":39}},{"generated":{"line":33,"column":40},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":28}},{"generated":{"line":33,"column":41},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":26,"column":4}},{"name":"idx","generated":{"line":34,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":27,"column":4}},{"name":"idx","generated":{"line":34,"column":4},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":27,"column":4}},{"generated":{"line":34,"column":7},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":27,"column":7}},{"generated":{"line":34,"column":11},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":12},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":27,"column":4}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":28,"column":3}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":30,"column":2}},{"name":"result","generated":{"line":37,"column":9},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":30,"column":9}},{"generated":{"line":37,"column":15},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":31,"column":1}},{"generated":{"line":38,"column":1},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":21,"column":0}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":19,"column":0}},{"name":"fromPairs","generated":{"line":39,"column":15},"source":"node_modules/ramda/es/fromPairs.js","original":{"line":33,"column":15}}],"sources":{"node_modules/ramda/es/fromPairs.js":"import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;"},"lineCount":null}},"error":null,"hash":"406cd2a6f9429b1b97790d249f11517e","cacheData":{"env":{}}}
{"id":"node_modules/ramda/es/pluck.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\pluck.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./map.js","loc":{"line":2,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\pluck.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\map.js"},{"name":"./prop.js","loc":{"line":3,"column":17},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\pluck.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\prop.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _map = _interopRequireDefault(require(\"./map.js\"));\n\nvar _prop = _interopRequireDefault(require(\"./prop.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/(0, _curry.default)(function pluck(p, list) {\n  return (0, _map.default)((0, _prop.default)(p), list);\n});\nvar _default = pluck;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":28,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":30,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":32,"column":0}},{"name":"pluck","generated":{"line":43,"column":4},"source":"node_modules/ramda/es/pluck.js","original":{"line":32,"column":4}},{"generated":{"line":43,"column":9},"source":"node_modules/ramda/es/pluck.js","original":{"line":32,"column":9}},{"generated":{"line":43,"column":12},"source":"node_modules/ramda/es/pluck.js","original":{"line":33,"column":0}},{"generated":{"line":43,"column":25},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":45},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":8}},{"name":"pluck","generated":{"line":43,"column":54},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":17}},{"generated":{"line":43,"column":59},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":8}},{"name":"p","generated":{"line":43,"column":60},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":23}},{"generated":{"line":43,"column":61},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":8}},{"name":"list","generated":{"line":43,"column":63},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":26}},{"generated":{"line":43,"column":67},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":8}},{"generated":{"line":43,"column":69},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":32}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":9}},{"generated":{"line":44,"column":27},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":13}},{"name":"p","generated":{"line":44,"column":46},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":18}},{"generated":{"line":44,"column":47},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":13}},{"generated":{"line":44,"column":48},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":9}},{"name":"list","generated":{"line":44,"column":50},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":22}},{"generated":{"line":44,"column":54},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":9}},{"generated":{"line":44,"column":55},"source":"node_modules/ramda/es/pluck.js","original":{"line":35,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/pluck.js","original":{"line":36,"column":1}},{"generated":{"line":45,"column":1},"source":"node_modules/ramda/es/pluck.js","original":{"line":34,"column":0}},{"generated":{"line":45,"column":2},"source":"node_modules/ramda/es/pluck.js","original":{"line":32,"column":0}},{"name":"pluck","generated":{"line":46,"column":15},"source":"node_modules/ramda/es/pluck.js","original":{"line":38,"column":15}}],"sources":{"node_modules/ramda/es/pluck.js":"import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;"},"lineCount":null}},"error":null,"hash":"d686864f09eaec2ec0fc303309ec0fff","cacheData":{"env":{}}}
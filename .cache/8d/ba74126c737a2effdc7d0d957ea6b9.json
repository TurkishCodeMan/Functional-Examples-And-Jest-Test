{"id":"node_modules/ramda/es/useWith.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\useWith.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./curryN.js","loc":{"line":2,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\useWith.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curryN.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/(0, _curry.default)(function useWith(fn, transformers) {\n  return (0, _curryN.default)(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nvar _default = useWith;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":31,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":33,"column":0}},{"name":"useWith","generated":{"line":43,"column":4},"source":"node_modules/ramda/es/useWith.js","original":{"line":33,"column":4}},{"generated":{"line":43,"column":11},"source":"node_modules/ramda/es/useWith.js","original":{"line":33,"column":11}},{"generated":{"line":43,"column":14},"source":"node_modules/ramda/es/useWith.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":27},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":0}},{"generated":{"line":43,"column":47},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":8}},{"name":"useWith","generated":{"line":43,"column":56},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":17}},{"generated":{"line":43,"column":63},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":8}},{"name":"fn","generated":{"line":43,"column":64},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":25}},{"generated":{"line":43,"column":66},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":8}},{"name":"transformers","generated":{"line":43,"column":68},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":29}},{"generated":{"line":43,"column":80},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":8}},{"generated":{"line":43,"column":82},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":43}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":2}},{"generated":{"line":44,"column":9},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":9}},{"name":"transformers","generated":{"line":44,"column":30},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":16}},{"generated":{"line":44,"column":42},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":28}},{"name":"length","generated":{"line":44,"column":43},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":29}},{"generated":{"line":44,"column":49},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":9}},{"generated":{"line":44,"column":51},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":37}},{"generated":{"line":44,"column":63},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":49}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":37,"column":4}},{"name":"args","generated":{"line":45,"column":8},"source":"node_modules/ramda/es/useWith.js","original":{"line":37,"column":8}},{"generated":{"line":45,"column":12},"source":"node_modules/ramda/es/useWith.js","original":{"line":37,"column":12}},{"generated":{"line":45,"column":15},"source":"node_modules/ramda/es/useWith.js","original":{"line":37,"column":15}},{"generated":{"line":45,"column":17},"source":"node_modules/ramda/es/useWith.js","original":{"line":37,"column":4}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":38,"column":4}},{"name":"idx","generated":{"line":46,"column":8},"source":"node_modules/ramda/es/useWith.js","original":{"line":38,"column":8}},{"generated":{"line":46,"column":11},"source":"node_modules/ramda/es/useWith.js","original":{"line":38,"column":11}},{"generated":{"line":46,"column":14},"source":"node_modules/ramda/es/useWith.js","original":{"line":38,"column":14}},{"generated":{"line":46,"column":15},"source":"node_modules/ramda/es/useWith.js","original":{"line":38,"column":4}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":4}},{"name":"idx","generated":{"line":48,"column":11},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":11}},{"generated":{"line":48,"column":14},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":14}},{"name":"transformers","generated":{"line":48,"column":17},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":17}},{"generated":{"line":48,"column":29},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":29}},{"name":"length","generated":{"line":48,"column":30},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":30}},{"generated":{"line":48,"column":36},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":4}},{"generated":{"line":48,"column":38},"source":"node_modules/ramda/es/useWith.js","original":{"line":40,"column":38}},{"name":"args","generated":{"line":49,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":6}},{"name":"args","generated":{"line":49,"column":6},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":6}},{"generated":{"line":49,"column":10},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":10}},{"name":"push","generated":{"line":49,"column":11},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":11}},{"generated":{"line":49,"column":15},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":6}},{"name":"transformers","generated":{"line":49,"column":16},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":16}},{"generated":{"line":49,"column":28},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":28}},{"name":"idx","generated":{"line":49,"column":29},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":29}},{"generated":{"line":49,"column":32},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":28}},{"generated":{"line":49,"column":33},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":16}},{"name":"call","generated":{"line":49,"column":34},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":34}},{"generated":{"line":49,"column":38},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":16}},{"generated":{"line":49,"column":39},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":39}},{"generated":{"line":49,"column":43},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":16}},{"name":"arguments","generated":{"line":49,"column":45},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":45}},{"generated":{"line":49,"column":54},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":54}},{"name":"idx","generated":{"line":49,"column":55},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":55}},{"generated":{"line":49,"column":58},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":54}},{"generated":{"line":49,"column":59},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":16}},{"generated":{"line":49,"column":60},"source":"node_modules/ramda/es/useWith.js","original":{"line":41,"column":6}},{"name":"idx","generated":{"line":50,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":42,"column":6}},{"name":"idx","generated":{"line":50,"column":6},"source":"node_modules/ramda/es/useWith.js","original":{"line":42,"column":6}},{"generated":{"line":50,"column":9},"source":"node_modules/ramda/es/useWith.js","original":{"line":42,"column":9}},{"generated":{"line":50,"column":13},"source":"node_modules/ramda/es/useWith.js","original":{"line":42,"column":13}},{"generated":{"line":50,"column":14},"source":"node_modules/ramda/es/useWith.js","original":{"line":42,"column":6}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":43,"column":5}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":4}},{"name":"fn","generated":{"line":53,"column":11},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":11}},{"generated":{"line":53,"column":13},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":13}},{"name":"apply","generated":{"line":53,"column":14},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":14}},{"generated":{"line":53,"column":19},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":11}},{"generated":{"line":53,"column":20},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":20}},{"generated":{"line":53,"column":24},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":11}},{"name":"args","generated":{"line":53,"column":26},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":26}},{"generated":{"line":53,"column":30},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":30}},{"name":"concat","generated":{"line":53,"column":31},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":31}},{"generated":{"line":53,"column":37},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":26}},{"name":"Array","generated":{"line":53,"column":38},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"generated":{"line":53,"column":43},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":43}},{"name":"prototype","generated":{"line":53,"column":44},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":44}},{"generated":{"line":53,"column":53},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"name":"slice","generated":{"line":53,"column":54},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":54}},{"generated":{"line":53,"column":59},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"name":"call","generated":{"line":53,"column":60},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":60}},{"generated":{"line":53,"column":64},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"name":"arguments","generated":{"line":53,"column":65},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":65}},{"generated":{"line":53,"column":74},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"name":"transformers","generated":{"line":53,"column":76},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":76}},{"generated":{"line":53,"column":88},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":88}},{"name":"length","generated":{"line":53,"column":89},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":89}},{"generated":{"line":53,"column":95},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":38}},{"generated":{"line":53,"column":96},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":26}},{"generated":{"line":53,"column":97},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":11}},{"generated":{"line":53,"column":98},"source":"node_modules/ramda/es/useWith.js","original":{"line":45,"column":4}},{"generated":{"line":54,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":46,"column":3}},{"generated":{"line":54,"column":3},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":9}},{"generated":{"line":54,"column":4},"source":"node_modules/ramda/es/useWith.js","original":{"line":36,"column":2}},{"generated":{"line":55,"column":0},"source":"node_modules/ramda/es/useWith.js","original":{"line":47,"column":1}},{"generated":{"line":55,"column":1},"source":"node_modules/ramda/es/useWith.js","original":{"line":35,"column":0}},{"generated":{"line":55,"column":2},"source":"node_modules/ramda/es/useWith.js","original":{"line":33,"column":0}},{"name":"useWith","generated":{"line":56,"column":15},"source":"node_modules/ramda/es/useWith.js","original":{"line":49,"column":15}}],"sources":{"node_modules/ramda/es/useWith.js":"import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;"},"lineCount":null}},"error":null,"hash":"ea90c65e4a43ed6785ed16fd309c1066","cacheData":{"env":{}}}
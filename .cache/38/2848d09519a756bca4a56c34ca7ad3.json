{"id":"node_modules/ramda/es/until.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\until.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/(0, _curry.default)(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\nvar _default = until;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":22,"column":0}},{"name":"until","generated":{"line":31,"column":4},"source":"node_modules/ramda/es/until.js","original":{"line":22,"column":4}},{"generated":{"line":31,"column":9},"source":"node_modules/ramda/es/until.js","original":{"line":22,"column":9}},{"generated":{"line":31,"column":12},"source":"node_modules/ramda/es/until.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":25},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":45},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":8}},{"name":"until","generated":{"line":31,"column":54},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":17}},{"generated":{"line":31,"column":59},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":8}},{"name":"pred","generated":{"line":31,"column":60},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":23}},{"generated":{"line":31,"column":64},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":8}},{"name":"fn","generated":{"line":31,"column":66},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":29}},{"generated":{"line":31,"column":68},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":8}},{"name":"init","generated":{"line":31,"column":70},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":33}},{"generated":{"line":31,"column":74},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":8}},{"generated":{"line":31,"column":76},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":39}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":25,"column":2}},{"name":"val","generated":{"line":32,"column":6},"source":"node_modules/ramda/es/until.js","original":{"line":25,"column":6}},{"generated":{"line":32,"column":9},"source":"node_modules/ramda/es/until.js","original":{"line":25,"column":9}},{"name":"init","generated":{"line":32,"column":12},"source":"node_modules/ramda/es/until.js","original":{"line":25,"column":12}},{"generated":{"line":32,"column":16},"source":"node_modules/ramda/es/until.js","original":{"line":25,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":2}},{"generated":{"line":34,"column":9},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":9}},{"name":"pred","generated":{"line":34,"column":10},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":10}},{"generated":{"line":34,"column":14},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":14}},{"name":"val","generated":{"line":34,"column":15},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":15}},{"generated":{"line":34,"column":18},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":14}},{"generated":{"line":34,"column":19},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":2}},{"generated":{"line":34,"column":21},"source":"node_modules/ramda/es/until.js","original":{"line":27,"column":21}},{"name":"val","generated":{"line":35,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":4}},{"name":"val","generated":{"line":35,"column":4},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":4}},{"generated":{"line":35,"column":7},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":7}},{"name":"fn","generated":{"line":35,"column":10},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":10}},{"generated":{"line":35,"column":12},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":12}},{"name":"val","generated":{"line":35,"column":13},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":13}},{"generated":{"line":35,"column":16},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":12}},{"generated":{"line":35,"column":17},"source":"node_modules/ramda/es/until.js","original":{"line":28,"column":4}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":29,"column":3}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":31,"column":2}},{"name":"val","generated":{"line":38,"column":9},"source":"node_modules/ramda/es/until.js","original":{"line":31,"column":9}},{"generated":{"line":38,"column":12},"source":"node_modules/ramda/es/until.js","original":{"line":31,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/until.js","original":{"line":32,"column":1}},{"generated":{"line":39,"column":1},"source":"node_modules/ramda/es/until.js","original":{"line":24,"column":0}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/until.js","original":{"line":22,"column":0}},{"name":"until","generated":{"line":40,"column":15},"source":"node_modules/ramda/es/until.js","original":{"line":34,"column":15}}],"sources":{"node_modules/ramda/es/until.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;"},"lineCount":null}},"error":null,"hash":"7c0f92655885f89e317c36f508f8a52a","cacheData":{"env":{}}}
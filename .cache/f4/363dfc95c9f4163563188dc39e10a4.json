{"id":"node_modules/ramda/es/eqBy.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\eqBy.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./equals.js","loc":{"line":2,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\eqBy.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\equals.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _equals = _interopRequireDefault(require(\"./equals.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/(0, _curry.default)(function eqBy(f, x, y) {\n  return (0, _equals.default)(f(x), f(y));\n});\nvar _default = eqBy;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":21,"column":0}},{"name":"eqBy","generated":{"line":31,"column":4},"source":"node_modules/ramda/es/eqBy.js","original":{"line":21,"column":4}},{"generated":{"line":31,"column":8},"source":"node_modules/ramda/es/eqBy.js","original":{"line":21,"column":8}},{"generated":{"line":31,"column":11},"source":"node_modules/ramda/es/eqBy.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":24},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":44},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":8}},{"name":"eqBy","generated":{"line":31,"column":53},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":17}},{"generated":{"line":31,"column":57},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":8}},{"name":"f","generated":{"line":31,"column":58},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":22}},{"generated":{"line":31,"column":59},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":8}},{"name":"x","generated":{"line":31,"column":61},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":25}},{"generated":{"line":31,"column":62},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":8}},{"name":"y","generated":{"line":31,"column":64},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":28}},{"generated":{"line":31,"column":65},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":8}},{"generated":{"line":31,"column":67},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":31}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":2}},{"generated":{"line":32,"column":9},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":9}},{"name":"f","generated":{"line":32,"column":30},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":16}},{"generated":{"line":32,"column":31},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":17}},{"name":"x","generated":{"line":32,"column":32},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":18}},{"generated":{"line":32,"column":33},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":17}},{"generated":{"line":32,"column":34},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":9}},{"name":"f","generated":{"line":32,"column":36},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":22}},{"generated":{"line":32,"column":37},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":23}},{"name":"y","generated":{"line":32,"column":38},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":24}},{"generated":{"line":32,"column":39},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":23}},{"generated":{"line":32,"column":40},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":9}},{"generated":{"line":32,"column":41},"source":"node_modules/ramda/es/eqBy.js","original":{"line":24,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/eqBy.js","original":{"line":25,"column":1}},{"generated":{"line":33,"column":1},"source":"node_modules/ramda/es/eqBy.js","original":{"line":23,"column":0}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/eqBy.js","original":{"line":21,"column":0}},{"name":"eqBy","generated":{"line":34,"column":15},"source":"node_modules/ramda/es/eqBy.js","original":{"line":27,"column":15}}],"sources":{"node_modules/ramda/es/eqBy.js":"import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;"},"lineCount":null}},"error":null,"hash":"72b6cc7ac2bf042f7fa3b00c8ec4feb1","cacheData":{"env":{}}}
{"id":"node_modules/ramda/es/juxt.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\juxt.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./converge.js","loc":{"line":2,"column":21},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\juxt.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\converge.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _converge = _interopRequireDefault(require(\"./converge.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/(0, _curry.default)(function juxt(fns) {\n  return (0, _converge.default)(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nvar _default = juxt;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":21,"column":0}},{"name":"juxt","generated":{"line":31,"column":4},"source":"node_modules/ramda/es/juxt.js","original":{"line":21,"column":4}},{"generated":{"line":31,"column":8},"source":"node_modules/ramda/es/juxt.js","original":{"line":21,"column":8}},{"generated":{"line":31,"column":11},"source":"node_modules/ramda/es/juxt.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":24},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":44},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":8}},{"name":"juxt","generated":{"line":31,"column":53},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":17}},{"generated":{"line":31,"column":57},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":8}},{"name":"fns","generated":{"line":31,"column":58},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":22}},{"generated":{"line":31,"column":61},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":8}},{"generated":{"line":31,"column":63},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":27}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":2}},{"generated":{"line":32,"column":9},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":9}},{"generated":{"line":32,"column":32},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":18}},{"generated":{"line":32,"column":44},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":30}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":4}},{"name":"Array","generated":{"line":33,"column":11},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"generated":{"line":33,"column":16},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":16}},{"name":"prototype","generated":{"line":33,"column":17},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":17}},{"generated":{"line":33,"column":26},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"name":"slice","generated":{"line":33,"column":27},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":27}},{"generated":{"line":33,"column":32},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"name":"call","generated":{"line":33,"column":33},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":33}},{"generated":{"line":33,"column":37},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"name":"arguments","generated":{"line":33,"column":38},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":38}},{"generated":{"line":33,"column":47},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"generated":{"line":33,"column":49},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":49}},{"generated":{"line":33,"column":50},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":11}},{"generated":{"line":33,"column":51},"source":"node_modules/ramda/es/juxt.js","original":{"line":25,"column":4}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":26,"column":3}},{"generated":{"line":34,"column":3},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":9}},{"name":"fns","generated":{"line":34,"column":5},"source":"node_modules/ramda/es/juxt.js","original":{"line":26,"column":5}},{"generated":{"line":34,"column":8},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":9}},{"generated":{"line":34,"column":9},"source":"node_modules/ramda/es/juxt.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/juxt.js","original":{"line":27,"column":1}},{"generated":{"line":35,"column":1},"source":"node_modules/ramda/es/juxt.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":2},"source":"node_modules/ramda/es/juxt.js","original":{"line":21,"column":0}},{"name":"juxt","generated":{"line":36,"column":15},"source":"node_modules/ramda/es/juxt.js","original":{"line":29,"column":15}}],"sources":{"node_modules/ramda/es/juxt.js":"import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;"},"lineCount":null}},"error":null,"hash":"d50fbb207e3ba5be7905641bcc6e5151","cacheData":{"env":{}}}
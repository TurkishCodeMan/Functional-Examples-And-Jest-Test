{"id":"node_modules/ramda/es/curry.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curry.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./curryN.js","loc":{"line":2,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curry.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\curryN.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _curryN = _interopRequireDefault(require(\"./curryN.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/(0, _curry.default)(function curry(fn) {\n  return (0, _curryN.default)(fn.length, fn);\n});\nvar _default = curry;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":31,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":32,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":33,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":34,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":35,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":36,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":37,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":38,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":39,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":40,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":41,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":42,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":43,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":45,"column":0}},{"name":"curry","generated":{"line":55,"column":4},"source":"node_modules/ramda/es/curry.js","original":{"line":45,"column":4}},{"generated":{"line":55,"column":9},"source":"node_modules/ramda/es/curry.js","original":{"line":45,"column":9}},{"generated":{"line":55,"column":12},"source":"node_modules/ramda/es/curry.js","original":{"line":46,"column":0}},{"generated":{"line":55,"column":25},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":0}},{"generated":{"line":55,"column":45},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":8}},{"name":"curry","generated":{"line":55,"column":54},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":17}},{"generated":{"line":55,"column":59},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":8}},{"name":"fn","generated":{"line":55,"column":60},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":23}},{"generated":{"line":55,"column":62},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":8}},{"generated":{"line":55,"column":64},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":27}},{"generated":{"line":56,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":2}},{"generated":{"line":56,"column":9},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":9}},{"name":"fn","generated":{"line":56,"column":30},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":16}},{"generated":{"line":56,"column":32},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":18}},{"name":"length","generated":{"line":56,"column":33},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":19}},{"generated":{"line":56,"column":39},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":9}},{"name":"fn","generated":{"line":56,"column":41},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":27}},{"generated":{"line":56,"column":43},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":9}},{"generated":{"line":56,"column":44},"source":"node_modules/ramda/es/curry.js","original":{"line":48,"column":2}},{"generated":{"line":57,"column":0},"source":"node_modules/ramda/es/curry.js","original":{"line":49,"column":1}},{"generated":{"line":57,"column":1},"source":"node_modules/ramda/es/curry.js","original":{"line":47,"column":0}},{"generated":{"line":57,"column":2},"source":"node_modules/ramda/es/curry.js","original":{"line":45,"column":0}},{"name":"curry","generated":{"line":58,"column":15},"source":"node_modules/ramda/es/curry.js","original":{"line":51,"column":15}}],"sources":{"node_modules/ramda/es/curry.js":"import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;"},"lineCount":null}},"error":null,"hash":"7a218d5efbde3998a56578f300d780ed","cacheData":{"env":{}}}
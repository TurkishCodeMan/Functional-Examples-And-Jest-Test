{"id":"node_modules/ramda/es/chain.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\chain.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\chain.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_makeFlat.js","loc":{"line":3,"column":22},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\chain.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_makeFlat.js"},{"name":"./internal/_xchain.js","loc":{"line":4,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\chain.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_xchain.js"},{"name":"./map.js","loc":{"line":5,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\chain.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _makeFlat2 = _interopRequireDefault(require(\"./internal/_makeFlat.js\"));\n\nvar _xchain2 = _interopRequireDefault(require(\"./internal/_xchain.js\"));\n\nvar _map = _interopRequireDefault(require(\"./map.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _dispatchable2.default)(['fantasy-land/chain', 'chain'], _xchain2.default, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return (0, _makeFlat2.default)(false)((0, _map.default)(fn, monad));\n}));\nvar _default = chain;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":5,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":6,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":7,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":8,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":9,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":10,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":11,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":12,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":13,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":14,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":15,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":16,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":17,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":18,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":19,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":20,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":21,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":22,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":23,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":24,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":25,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":26,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":27,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":28,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":29,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":30,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":31,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":33,"column":0}},{"name":"chain","generated":{"line":46,"column":4},"source":"node_modules/ramda/es/chain.js","original":{"line":33,"column":4}},{"generated":{"line":46,"column":9},"source":"node_modules/ramda/es/chain.js","original":{"line":33,"column":9}},{"generated":{"line":46,"column":12},"source":"node_modules/ramda/es/chain.js","original":{"line":34,"column":0}},{"generated":{"line":46,"column":25},"source":"node_modules/ramda/es/chain.js","original":{"line":35,"column":0}},{"generated":{"line":46,"column":46},"source":"node_modules/ramda/es/chain.js","original":{"line":36,"column":0}},{"generated":{"line":46,"column":59},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":0}},{"generated":{"line":46,"column":87},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":14}},{"generated":{"line":46,"column":88},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":15}},{"generated":{"line":46,"column":108},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":14}},{"generated":{"line":46,"column":110},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":37}},{"generated":{"line":46,"column":117},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":14}},{"generated":{"line":46,"column":118},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":0}},{"name":"_xchain","generated":{"line":46,"column":120},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":47}},{"generated":{"line":46,"column":136},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":0}},{"generated":{"line":46,"column":138},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":56}},{"name":"chain","generated":{"line":46,"column":147},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":65}},{"generated":{"line":46,"column":152},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":56}},{"name":"fn","generated":{"line":46,"column":153},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":71}},{"generated":{"line":46,"column":155},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":56}},{"name":"monad","generated":{"line":46,"column":157},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":75}},{"generated":{"line":46,"column":162},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":56}},{"generated":{"line":46,"column":164},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":82}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":2}},{"generated":{"line":47,"column":6},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":6}},{"name":"monad","generated":{"line":47,"column":13},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":13}},{"generated":{"line":47,"column":18},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":6}},{"generated":{"line":47,"column":23},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":23}},{"generated":{"line":47,"column":33},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":2}},{"generated":{"line":47,"column":35},"source":"node_modules/ramda/es/chain.js","original":{"line":38,"column":35}},{"generated":{"line":48,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":4}},{"generated":{"line":48,"column":11},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":11}},{"name":"x","generated":{"line":48,"column":21},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":21}},{"generated":{"line":48,"column":22},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":11}},{"generated":{"line":48,"column":24},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":24}},{"generated":{"line":49,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":6}},{"name":"fn","generated":{"line":49,"column":13},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":13}},{"generated":{"line":49,"column":15},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":15}},{"name":"monad","generated":{"line":49,"column":16},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":16}},{"generated":{"line":49,"column":21},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":21}},{"name":"x","generated":{"line":49,"column":22},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":22}},{"generated":{"line":49,"column":23},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":21}},{"generated":{"line":49,"column":24},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":15}},{"generated":{"line":49,"column":25},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":13}},{"name":"x","generated":{"line":49,"column":26},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":26}},{"generated":{"line":49,"column":27},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":13}},{"generated":{"line":49,"column":28},"source":"node_modules/ramda/es/chain.js","original":{"line":40,"column":6}},{"generated":{"line":50,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":41,"column":5}},{"generated":{"line":50,"column":5},"source":"node_modules/ramda/es/chain.js","original":{"line":39,"column":4}},{"generated":{"line":51,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":42,"column":3}},{"generated":{"line":53,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":2}},{"generated":{"line":53,"column":9},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":9}},{"generated":{"line":53,"column":33},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":19}},{"generated":{"line":53,"column":38},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":9}},{"generated":{"line":53,"column":40},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":26}},{"name":"fn","generated":{"line":53,"column":58},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":30}},{"generated":{"line":53,"column":60},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":26}},{"name":"monad","generated":{"line":53,"column":62},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":34}},{"generated":{"line":53,"column":67},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":26}},{"generated":{"line":53,"column":68},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":9}},{"generated":{"line":53,"column":69},"source":"node_modules/ramda/es/chain.js","original":{"line":44,"column":2}},{"generated":{"line":54,"column":0},"source":"node_modules/ramda/es/chain.js","original":{"line":45,"column":1}},{"generated":{"line":54,"column":1},"source":"node_modules/ramda/es/chain.js","original":{"line":37,"column":0}},{"generated":{"line":54,"column":2},"source":"node_modules/ramda/es/chain.js","original":{"line":35,"column":0}},{"generated":{"line":54,"column":3},"source":"node_modules/ramda/es/chain.js","original":{"line":33,"column":0}},{"name":"chain","generated":{"line":55,"column":15},"source":"node_modules/ramda/es/chain.js","original":{"line":47,"column":15}}],"sources":{"node_modules/ramda/es/chain.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;"},"lineCount":null}},"error":null,"hash":"3b38d1dd17ca51c7e75a6b042ce71184","cacheData":{"env":{}}}
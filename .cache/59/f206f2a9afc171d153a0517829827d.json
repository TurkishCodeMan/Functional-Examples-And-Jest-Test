{"id":"node_modules/ramda/es/lens.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\lens.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./map.js","loc":{"line":2,"column":16},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\lens.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _map = _interopRequireDefault(require(\"./map.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/(0, _curry.default)(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return (0, _map.default)(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nvar _default = lens;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":27,"column":0}},{"name":"lens","generated":{"line":37,"column":4},"source":"node_modules/ramda/es/lens.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":8},"source":"node_modules/ramda/es/lens.js","original":{"line":27,"column":8}},{"generated":{"line":37,"column":11},"source":"node_modules/ramda/es/lens.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":24},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":44},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":8}},{"name":"lens","generated":{"line":37,"column":53},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":17}},{"generated":{"line":37,"column":57},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":8}},{"name":"getter","generated":{"line":37,"column":58},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":22}},{"generated":{"line":37,"column":64},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":8}},{"name":"setter","generated":{"line":37,"column":66},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":30}},{"generated":{"line":37,"column":72},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":8}},{"generated":{"line":37,"column":74},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":38}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":9},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":9}},{"name":"toFunctorFn","generated":{"line":38,"column":19},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":19}},{"generated":{"line":38,"column":30},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":9}},{"generated":{"line":38,"column":32},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":32}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":4}},{"generated":{"line":39,"column":11},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":11}},{"name":"target","generated":{"line":39,"column":21},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":21}},{"generated":{"line":39,"column":27},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":11}},{"generated":{"line":39,"column":29},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":29}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":6}},{"generated":{"line":40,"column":13},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":13}},{"generated":{"line":40,"column":31},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":17}},{"name":"focus","generated":{"line":40,"column":41},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":27}},{"generated":{"line":40,"column":46},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":17}},{"generated":{"line":40,"column":48},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":34}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":8}},{"name":"setter","generated":{"line":41,"column":15},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":15}},{"generated":{"line":41,"column":21},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":21}},{"name":"focus","generated":{"line":41,"column":22},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":22}},{"generated":{"line":41,"column":27},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":21}},{"name":"target","generated":{"line":41,"column":29},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":29}},{"generated":{"line":41,"column":35},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":21}},{"generated":{"line":41,"column":36},"source":"node_modules/ramda/es/lens.js","original":{"line":33,"column":8}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":7}},{"generated":{"line":42,"column":7},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":13}},{"name":"toFunctorFn","generated":{"line":42,"column":9},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":9}},{"generated":{"line":42,"column":20},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":20}},{"name":"getter","generated":{"line":42,"column":21},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":21}},{"generated":{"line":42,"column":27},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":27}},{"name":"target","generated":{"line":42,"column":28},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":28}},{"generated":{"line":42,"column":34},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":27}},{"generated":{"line":42,"column":35},"source":"node_modules/ramda/es/lens.js","original":{"line":34,"column":20}},{"generated":{"line":42,"column":36},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":13}},{"generated":{"line":42,"column":37},"source":"node_modules/ramda/es/lens.js","original":{"line":32,"column":6}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":35,"column":5}},{"generated":{"line":43,"column":5},"source":"node_modules/ramda/es/lens.js","original":{"line":31,"column":4}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":36,"column":3}},{"generated":{"line":44,"column":3},"source":"node_modules/ramda/es/lens.js","original":{"line":30,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/lens.js","original":{"line":37,"column":1}},{"generated":{"line":45,"column":1},"source":"node_modules/ramda/es/lens.js","original":{"line":29,"column":0}},{"generated":{"line":45,"column":2},"source":"node_modules/ramda/es/lens.js","original":{"line":27,"column":0}},{"name":"lens","generated":{"line":46,"column":15},"source":"node_modules/ramda/es/lens.js","original":{"line":39,"column":15}}],"sources":{"node_modules/ramda/es/lens.js":"import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;"},"lineCount":null}},"error":null,"hash":"04f2077d2fe1e2b674050cb800de7bf0","cacheData":{"env":{}}}
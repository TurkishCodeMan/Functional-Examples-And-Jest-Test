{"id":"node_modules/ramda/es/ascend.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\ascend.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/(0, _curry.default)(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nvar _default = ascend;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":8,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":12,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":13,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":15,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":16,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":17,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":18,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":19,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":20,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":21,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":22,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":23,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":24,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":25,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":26,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":28,"column":0}},{"name":"ascend","generated":{"line":37,"column":4},"source":"node_modules/ramda/es/ascend.js","original":{"line":28,"column":4}},{"generated":{"line":37,"column":10},"source":"node_modules/ramda/es/ascend.js","original":{"line":28,"column":10}},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/ascend.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":26},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":46},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":8}},{"name":"ascend","generated":{"line":37,"column":55},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":17}},{"generated":{"line":37,"column":61},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":8}},{"name":"fn","generated":{"line":37,"column":62},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":24}},{"generated":{"line":37,"column":64},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":8}},{"name":"a","generated":{"line":37,"column":66},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":28}},{"generated":{"line":37,"column":67},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":8}},{"name":"b","generated":{"line":37,"column":69},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":31}},{"generated":{"line":37,"column":70},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":8}},{"generated":{"line":37,"column":72},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":34}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":2}},{"name":"aa","generated":{"line":38,"column":6},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":6}},{"generated":{"line":38,"column":8},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":8}},{"name":"fn","generated":{"line":38,"column":11},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":11}},{"generated":{"line":38,"column":13},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":13}},{"name":"a","generated":{"line":38,"column":14},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":14}},{"generated":{"line":38,"column":15},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":13}},{"generated":{"line":38,"column":16},"source":"node_modules/ramda/es/ascend.js","original":{"line":31,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":2}},{"name":"bb","generated":{"line":39,"column":6},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":6}},{"generated":{"line":39,"column":8},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":8}},{"name":"fn","generated":{"line":39,"column":11},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":11}},{"generated":{"line":39,"column":13},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":13}},{"name":"b","generated":{"line":39,"column":14},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":14}},{"generated":{"line":39,"column":15},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":13}},{"generated":{"line":39,"column":16},"source":"node_modules/ramda/es/ascend.js","original":{"line":32,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":2}},{"name":"aa","generated":{"line":40,"column":9},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":9}},{"generated":{"line":40,"column":11},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":11}},{"name":"bb","generated":{"line":40,"column":14},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":14}},{"generated":{"line":40,"column":16},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":9}},{"generated":{"line":40,"column":19},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":19}},{"generated":{"line":40,"column":20},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":20}},{"generated":{"line":40,"column":21},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":9}},{"name":"aa","generated":{"line":40,"column":24},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":24}},{"generated":{"line":40,"column":26},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":26}},{"name":"bb","generated":{"line":40,"column":29},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":29}},{"generated":{"line":40,"column":31},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":24}},{"generated":{"line":40,"column":34},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":34}},{"generated":{"line":40,"column":35},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":24}},{"generated":{"line":40,"column":38},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":38}},{"generated":{"line":40,"column":39},"source":"node_modules/ramda/es/ascend.js","original":{"line":33,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/ascend.js","original":{"line":34,"column":1}},{"generated":{"line":41,"column":1},"source":"node_modules/ramda/es/ascend.js","original":{"line":30,"column":0}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/ascend.js","original":{"line":28,"column":0}},{"name":"ascend","generated":{"line":42,"column":15},"source":"node_modules/ramda/es/ascend.js","original":{"line":36,"column":15}}],"sources":{"node_modules/ramda/es/ascend.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;"},"lineCount":null}},"error":null,"hash":"b6409fc87252dbdf24eabdbdb3ea9300","cacheData":{"env":{}}}
{"id":"node_modules/ramda/es/tryCatch.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_arity.js","loc":{"line":1,"column":19},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tryCatch.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_arity.js"},{"name":"./internal/_concat.js","loc":{"line":2,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tryCatch.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_concat.js"},{"name":"./internal/_curry2.js","loc":{"line":3,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tryCatch.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _arity2 = _interopRequireDefault(require(\"./internal/_arity.js\"));\n\nvar _concat2 = _interopRequireDefault(require(\"./internal/_concat.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\nvar tryCatch = /*#__PURE__*/(0, _curry.default)(function _tryCatch(tryer, catcher) {\n  return (0, _arity2.default)(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, (0, _concat2.default)([e], arguments));\n    }\n  });\n});\nvar _default = tryCatch;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":28,"column":0}},{"name":"tryCatch","generated":{"line":39,"column":4},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":28,"column":4}},{"generated":{"line":39,"column":12},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":28,"column":12}},{"generated":{"line":39,"column":15},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":28},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":48},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":8}},{"name":"_tryCatch","generated":{"line":39,"column":57},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":17}},{"generated":{"line":39,"column":66},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":8}},{"name":"tryer","generated":{"line":39,"column":67},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":27}},{"generated":{"line":39,"column":72},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":8}},{"name":"catcher","generated":{"line":39,"column":74},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":34}},{"generated":{"line":39,"column":81},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":8}},{"generated":{"line":39,"column":83},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":43}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":2}},{"generated":{"line":40,"column":9},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":9}},{"name":"tryer","generated":{"line":40,"column":30},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":16}},{"generated":{"line":40,"column":35},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":21}},{"name":"length","generated":{"line":40,"column":36},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":22}},{"generated":{"line":40,"column":42},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":9}},{"generated":{"line":40,"column":44},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":30}},{"generated":{"line":40,"column":56},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":42}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":32,"column":4}},{"generated":{"line":41,"column":8},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":32,"column":8}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":6}},{"name":"tryer","generated":{"line":42,"column":13},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":13}},{"generated":{"line":42,"column":18},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":18}},{"name":"apply","generated":{"line":42,"column":19},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":19}},{"generated":{"line":42,"column":24},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":13}},{"generated":{"line":42,"column":25},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":25}},{"generated":{"line":42,"column":29},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":13}},{"name":"arguments","generated":{"line":42,"column":31},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":31}},{"generated":{"line":42,"column":40},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":13}},{"generated":{"line":42,"column":41},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":33,"column":6}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":34,"column":5}},{"generated":{"line":43,"column":5},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":32,"column":4}},{"generated":{"line":43,"column":6},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":34,"column":6}},{"name":"e","generated":{"line":43,"column":13},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":34,"column":13}},{"generated":{"line":43,"column":14},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":34,"column":6}},{"generated":{"line":43,"column":16},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":34,"column":16}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":6}},{"name":"catcher","generated":{"line":44,"column":13},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":13}},{"generated":{"line":44,"column":20},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":20}},{"name":"apply","generated":{"line":44,"column":21},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":21}},{"generated":{"line":44,"column":26},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":13}},{"generated":{"line":44,"column":27},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":27}},{"generated":{"line":44,"column":31},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":13}},{"generated":{"line":44,"column":33},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":33}},{"generated":{"line":44,"column":55},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":41}},{"name":"e","generated":{"line":44,"column":56},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":42}},{"generated":{"line":44,"column":57},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":41}},{"generated":{"line":44,"column":58},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":33}},{"name":"arguments","generated":{"line":44,"column":60},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":46}},{"generated":{"line":44,"column":69},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":33}},{"generated":{"line":44,"column":70},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":13}},{"generated":{"line":44,"column":71},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":35,"column":6}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":36,"column":5}},{"generated":{"line":46,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":37,"column":3}},{"generated":{"line":46,"column":3},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":9}},{"generated":{"line":46,"column":4},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":31,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":38,"column":1}},{"generated":{"line":47,"column":1},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":30,"column":0}},{"generated":{"line":47,"column":2},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":28,"column":0}},{"name":"tryCatch","generated":{"line":48,"column":15},"source":"node_modules/ramda/es/tryCatch.js","original":{"line":40,"column":15}}],"sources":{"node_modules/ramda/es/tryCatch.js":"import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;"},"lineCount":null}},"error":null,"hash":"bb267f94c5337d8e3829037fe6e09052","cacheData":{"env":{}}}
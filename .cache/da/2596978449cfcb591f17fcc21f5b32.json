{"id":"node_modules/ramda/es/tap.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tap.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tap.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_xtap.js","loc":{"line":3,"column":18},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\tap.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_xtap.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _xtap2 = _interopRequireDefault(require(\"./internal/_xtap.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _dispatchable2.default)([], _xtap2.default, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nvar _default = tap;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":25,"column":0}},{"name":"tap","generated":{"line":36,"column":4},"source":"node_modules/ramda/es/tap.js","original":{"line":25,"column":4}},{"generated":{"line":36,"column":7},"source":"node_modules/ramda/es/tap.js","original":{"line":25,"column":7}},{"generated":{"line":36,"column":10},"source":"node_modules/ramda/es/tap.js","original":{"line":26,"column":0}},{"generated":{"line":36,"column":23},"source":"node_modules/ramda/es/tap.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":44},"source":"node_modules/ramda/es/tap.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":57},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":85},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":14}},{"generated":{"line":36,"column":87},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":0}},{"name":"_xtap","generated":{"line":36,"column":89},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":18}},{"generated":{"line":36,"column":103},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":105},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":25}},{"name":"tap","generated":{"line":36,"column":114},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":34}},{"generated":{"line":36,"column":117},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":25}},{"name":"fn","generated":{"line":36,"column":118},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":38}},{"generated":{"line":36,"column":120},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":25}},{"name":"x","generated":{"line":36,"column":122},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":42}},{"generated":{"line":36,"column":123},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":25}},{"generated":{"line":36,"column":125},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":45}},{"name":"fn","generated":{"line":37,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":2}},{"name":"fn","generated":{"line":37,"column":2},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":2}},{"generated":{"line":37,"column":4},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":4}},{"name":"x","generated":{"line":37,"column":5},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":5}},{"generated":{"line":37,"column":6},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":4}},{"generated":{"line":37,"column":7},"source":"node_modules/ramda/es/tap.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":31,"column":2}},{"name":"x","generated":{"line":38,"column":9},"source":"node_modules/ramda/es/tap.js","original":{"line":31,"column":9}},{"generated":{"line":38,"column":10},"source":"node_modules/ramda/es/tap.js","original":{"line":31,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/tap.js","original":{"line":32,"column":1}},{"generated":{"line":39,"column":1},"source":"node_modules/ramda/es/tap.js","original":{"line":29,"column":0}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/tap.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":3},"source":"node_modules/ramda/es/tap.js","original":{"line":25,"column":0}},{"name":"tap","generated":{"line":40,"column":15},"source":"node_modules/ramda/es/tap.js","original":{"line":34,"column":15}}],"sources":{"node_modules/ramda/es/tap.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;"},"lineCount":null}},"error":null,"hash":"8ef1e91b3726b30a9279a01e13cfe2eb","cacheData":{"env":{}}}
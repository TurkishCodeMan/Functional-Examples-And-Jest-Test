{"id":"node_modules/ramda/es/mergeDeepWith.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625666853822},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWith.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./mergeDeepWithKey.js","loc":{"line":2,"column":29},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWith.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\mergeDeepWithKey.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _mergeDeepWithKey = _interopRequireDefault(require(\"./mergeDeepWithKey.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/(0, _curry.default)(function mergeDeepWith(fn, lObj, rObj) {\n  return (0, _mergeDeepWithKey.default)(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nvar _default = mergeDeepWith;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":31,"column":0}},{"name":"mergeDeepWith","generated":{"line":41,"column":4},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":31,"column":4}},{"generated":{"line":41,"column":17},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":31,"column":17}},{"generated":{"line":41,"column":20},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":33},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":0}},{"generated":{"line":41,"column":53},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":8}},{"name":"mergeDeepWith","generated":{"line":41,"column":62},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":17}},{"generated":{"line":41,"column":75},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":8}},{"name":"fn","generated":{"line":41,"column":76},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":31}},{"generated":{"line":41,"column":78},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":8}},{"name":"lObj","generated":{"line":41,"column":80},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":35}},{"generated":{"line":41,"column":84},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":8}},{"name":"rObj","generated":{"line":41,"column":86},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":41}},{"generated":{"line":41,"column":90},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":8}},{"generated":{"line":41,"column":92},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":47}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":9}},{"generated":{"line":42,"column":40},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":26}},{"name":"k","generated":{"line":42,"column":50},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":36}},{"generated":{"line":42,"column":51},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":26}},{"name":"lVal","generated":{"line":42,"column":53},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":39}},{"generated":{"line":42,"column":57},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":26}},{"name":"rVal","generated":{"line":42,"column":59},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":45}},{"generated":{"line":42,"column":63},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":26}},{"generated":{"line":42,"column":65},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":51}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":4}},{"name":"fn","generated":{"line":43,"column":11},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":11}},{"generated":{"line":43,"column":13},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":13}},{"name":"lVal","generated":{"line":43,"column":14},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":14}},{"generated":{"line":43,"column":18},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":13}},{"name":"rVal","generated":{"line":43,"column":20},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":20}},{"generated":{"line":43,"column":24},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":13}},{"generated":{"line":43,"column":25},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":35,"column":4}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":36,"column":3}},{"generated":{"line":44,"column":3},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":9}},{"name":"lObj","generated":{"line":44,"column":5},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":36,"column":5}},{"generated":{"line":44,"column":9},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":9}},{"name":"rObj","generated":{"line":44,"column":11},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":36,"column":11}},{"generated":{"line":44,"column":15},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":9}},{"generated":{"line":44,"column":16},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":34,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":37,"column":1}},{"generated":{"line":45,"column":1},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":33,"column":0}},{"generated":{"line":45,"column":2},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":31,"column":0}},{"name":"mergeDeepWith","generated":{"line":46,"column":15},"source":"node_modules/ramda/es/mergeDeepWith.js","original":{"line":39,"column":15}}],"sources":{"node_modules/ramda/es/mergeDeepWith.js":"import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;"},"lineCount":null}},"error":null,"hash":"1e3a68e79846ddab736da1cc861f9c03","cacheData":{"env":{}}}
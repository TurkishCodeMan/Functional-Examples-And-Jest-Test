{"id":"node_modules/ramda/es/lift.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625419020183},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\lift.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./liftN.js","loc":{"line":2,"column":18},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\lift.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\liftN.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _liftN = _interopRequireDefault(require(\"./liftN.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/(0, _curry.default)(function lift(fn) {\n  return (0, _liftN.default)(fn.length, fn);\n});\nvar _default = lift;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":26,"column":0}},{"name":"lift","generated":{"line":36,"column":4},"source":"node_modules/ramda/es/lift.js","original":{"line":26,"column":4}},{"generated":{"line":36,"column":8},"source":"node_modules/ramda/es/lift.js","original":{"line":26,"column":8}},{"generated":{"line":36,"column":11},"source":"node_modules/ramda/es/lift.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":24},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":44},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":8}},{"name":"lift","generated":{"line":36,"column":53},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":17}},{"generated":{"line":36,"column":57},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":8}},{"name":"fn","generated":{"line":36,"column":58},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":22}},{"generated":{"line":36,"column":60},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":8}},{"generated":{"line":36,"column":62},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":26}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":9}},{"name":"fn","generated":{"line":37,"column":29},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":15}},{"generated":{"line":37,"column":31},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":17}},{"name":"length","generated":{"line":37,"column":32},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":18}},{"generated":{"line":37,"column":38},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":9}},{"name":"fn","generated":{"line":37,"column":40},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":26}},{"generated":{"line":37,"column":42},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":43},"source":"node_modules/ramda/es/lift.js","original":{"line":29,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/lift.js","original":{"line":30,"column":1}},{"generated":{"line":38,"column":1},"source":"node_modules/ramda/es/lift.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/lift.js","original":{"line":26,"column":0}},{"name":"lift","generated":{"line":39,"column":15},"source":"node_modules/ramda/es/lift.js","original":{"line":32,"column":15}}],"sources":{"node_modules/ramda/es/lift.js":"import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;"},"lineCount":null}},"error":null,"hash":"8fb3fd8e65b62ac8fbcf72ad81b8c074","cacheData":{"env":{}}}
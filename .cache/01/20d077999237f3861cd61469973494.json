{"id":"node_modules/ramda/es/unary.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\unary.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./nAry.js","loc":{"line":2,"column":17},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\unary.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\nAry.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _nAry = _interopRequireDefault(require(\"./nAry.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/(0, _curry.default)(function unary(fn) {\n  return (0, _nAry.default)(1, fn);\n});\nvar _default = unary;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":32,"column":0}},{"name":"unary","generated":{"line":42,"column":4},"source":"node_modules/ramda/es/unary.js","original":{"line":32,"column":4}},{"generated":{"line":42,"column":9},"source":"node_modules/ramda/es/unary.js","original":{"line":32,"column":9}},{"generated":{"line":42,"column":12},"source":"node_modules/ramda/es/unary.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":25},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":0}},{"generated":{"line":42,"column":45},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":8}},{"name":"unary","generated":{"line":42,"column":54},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":17}},{"generated":{"line":42,"column":59},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":8}},{"name":"fn","generated":{"line":42,"column":60},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":23}},{"generated":{"line":42,"column":62},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":8}},{"generated":{"line":42,"column":64},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":27}},{"generated":{"line":43,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":2}},{"generated":{"line":43,"column":9},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":9}},{"generated":{"line":43,"column":28},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":14}},{"generated":{"line":43,"column":29},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":9}},{"name":"fn","generated":{"line":43,"column":31},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":17}},{"generated":{"line":43,"column":33},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":9}},{"generated":{"line":43,"column":34},"source":"node_modules/ramda/es/unary.js","original":{"line":35,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/ramda/es/unary.js","original":{"line":36,"column":1}},{"generated":{"line":44,"column":1},"source":"node_modules/ramda/es/unary.js","original":{"line":34,"column":0}},{"generated":{"line":44,"column":2},"source":"node_modules/ramda/es/unary.js","original":{"line":32,"column":0}},{"name":"unary","generated":{"line":45,"column":15},"source":"node_modules/ramda/es/unary.js","original":{"line":38,"column":15}}],"sources":{"node_modules/ramda/es/unary.js":"import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;"},"lineCount":null}},"error":null,"hash":"b413016c11ca31f074a26910a9857063","cacheData":{"env":{}}}
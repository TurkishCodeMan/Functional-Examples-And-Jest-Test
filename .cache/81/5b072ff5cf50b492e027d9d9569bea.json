{"id":"node_modules/ramda/es/test.js","dependencies":[{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\package.json","includedInParent":true,"mtime":1625399650925},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\.babelrc","includedInParent":true,"mtime":1625398624876},{"name":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":499162500000},{"name":"./internal/_cloneRegExp.js","loc":{"line":1,"column":25},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\test.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_cloneRegExp.js"},{"name":"./internal/_curry2.js","loc":{"line":2,"column":20},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\test.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_isRegExp.js","loc":{"line":3,"column":22},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\test.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\internal\\_isRegExp.js"},{"name":"./toString.js","loc":{"line":4,"column":21},"parent":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\test.js","resolved":"E:\\Javascript\\JS-Hard-PartsV2\\brian_functional\\node_modules\\ramda\\es\\toString.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _cloneRegExp2 = _interopRequireDefault(require(\"./internal/_cloneRegExp.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _isRegExp2 = _interopRequireDefault(require(\"./internal/_isRegExp.js\"));\n\nvar _toString = _interopRequireDefault(require(\"./toString.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/(0, _curry.default)(function test(pattern, str) {\n  if (!(0, _isRegExp2.default)(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + (0, _toString.default)(pattern));\n  }\n\n  return (0, _cloneRegExp2.default)(pattern).test(str);\n});\nvar _default = test;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":7,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":8,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":9,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":10,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":12,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":13,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":14,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":15,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":16,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":17,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":18,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":19,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":21,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":23,"column":0}},{"name":"test","generated":{"line":35,"column":4},"source":"node_modules/ramda/es/test.js","original":{"line":23,"column":4}},{"generated":{"line":35,"column":8},"source":"node_modules/ramda/es/test.js","original":{"line":23,"column":8}},{"generated":{"line":35,"column":11},"source":"node_modules/ramda/es/test.js","original":{"line":24,"column":0}},{"generated":{"line":35,"column":24},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":0}},{"generated":{"line":35,"column":44},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":8}},{"name":"test","generated":{"line":35,"column":53},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":17}},{"generated":{"line":35,"column":57},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":8}},{"name":"pattern","generated":{"line":35,"column":58},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":22}},{"generated":{"line":35,"column":65},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":8}},{"name":"str","generated":{"line":35,"column":67},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":31}},{"generated":{"line":35,"column":70},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":8}},{"generated":{"line":35,"column":72},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":36}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":6},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":6}},{"generated":{"line":36,"column":7},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":7}},{"name":"pattern","generated":{"line":36,"column":31},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":17}},{"generated":{"line":36,"column":38},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":7}},{"generated":{"line":36,"column":39},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":41},"source":"node_modules/ramda/es/test.js","original":{"line":26,"column":27}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":10},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":10}},{"name":"TypeError","generated":{"line":37,"column":14},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":14}},{"generated":{"line":37,"column":23},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":10}},{"generated":{"line":37,"column":24},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":24}},{"generated":{"line":37,"column":100},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":100}},{"name":"pattern","generated":{"line":37,"column":123},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":109}},{"generated":{"line":37,"column":130},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":100}},{"generated":{"line":37,"column":131},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":10}},{"generated":{"line":37,"column":132},"source":"node_modules/ramda/es/test.js","original":{"line":27,"column":4}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":28,"column":3}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":2}},{"generated":{"line":40,"column":9},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":9}},{"name":"pattern","generated":{"line":40,"column":36},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":22}},{"generated":{"line":40,"column":43},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":9}},{"name":"test","generated":{"line":40,"column":45},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":31}},{"generated":{"line":40,"column":49},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":9}},{"name":"str","generated":{"line":40,"column":50},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":36}},{"generated":{"line":40,"column":53},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":9}},{"generated":{"line":40,"column":54},"source":"node_modules/ramda/es/test.js","original":{"line":30,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/test.js","original":{"line":31,"column":1}},{"generated":{"line":41,"column":1},"source":"node_modules/ramda/es/test.js","original":{"line":25,"column":0}},{"generated":{"line":41,"column":2},"source":"node_modules/ramda/es/test.js","original":{"line":23,"column":0}},{"name":"test","generated":{"line":42,"column":15},"source":"node_modules/ramda/es/test.js","original":{"line":33,"column":15}}],"sources":{"node_modules/ramda/es/test.js":"import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;"},"lineCount":null}},"error":null,"hash":"02f790254ca298b7c7302aa68ff1d303","cacheData":{"env":{}}}